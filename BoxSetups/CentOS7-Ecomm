#!/bin/bash
# ==============================================================================
# CentOS-Install.sh
#
# Author: Linux System Administration Expert
# Date: 2025-08-15
# Description: Automates the installation of PrestaShop 1.6.1.23 on a
#              CentOS 7 server for competitions.
#
# This script performs the following actions:
# 1. Checks for root privileges.
# 2. Fixes CentOS 7 EOL repositories to point to vault.centos.org.
# 3. Installs and configures a LAMP stack (Apache, MariaDB, PHP 7.1).
# 4. Creates a database and user for PrestaShop.
# 5. Downloads and installs PrestaShop 1.6.1.23 via CLI.
# 6. Sets appropriate file permissions.
# 7. Cleans up installation files and reports the admin URL.
#
# WARNING: This script creates an intentionally insecure environment for
#          educational and competitive purposes. It does NOT run
#          mysql_secure_installation and uses predictable credentials.
#          DO NOT USE IN A PRODUCTION ENVIRONMENT.
# ==============================================================================

# --- Script Configuration ---
# Exit immediately if a command exits with a non-zero status.
set -e
# Treat unset variables as an error.
set -u
# Pipelines return the exit status of the last command to exit with a non-zero status.
set -o pipefail

# --- Variables ---
DB_NAME="prestashop_db"
DB_USER="ps_user"
DB_PASS="Changeme1!" # Intentionally weak password for competition
ADMIN_EMAIL="sysadmin@comp.local"
ADMIN_PASS="AdminPass123" # Intentionally weak password for competition
PRESTASHOP_VERSION="1.6.1.23"
PRESTASHOP_URL="https://phpsources.net/phpsources.net_PrestaShop-1.6.1.23_176-62.zip"
PRESTASHOP_ZIP="prestashop.zip"
INSTALL_DIR="/var/www/html"
SHOP_DIR="${INSTALL_DIR}/prestashop"
SERVER_IP=$(hostname -I | awk '{print $1}')

# --- Helper Functions ---
log_info() {
    echo "[INFO] $(date +'%Y-%m-%d %H:%M:%S') - $1"
}

log_error() {
    echo " $(date +'%Y-%m-%d %H:%M:%S') - $1" >&2
    exit 1
}

# --- Main Logic ---

# 1. Prerequisite Check: Ensure script is run as root
if]; then
   log_error "This script must be run as root."
fi

log_info "Starting PrestaShop ${PRESTASHOP_VERSION} installation on CentOS 7..."

# 2. CentOS 7 EOL Repository Fix
log_info "Checking and fixing CentOS 7 repositories..."
# Check if the vault URL is already configured to make the script idempotent.
if! grep -q 'vault.centos.org' /etc/yum.repos.d/CentOS-Base.repo; then
    log_info "Standard mirrors are active. Switching to vault.centos.org for EOL support."
    # Use sed to comment out mirrorlist and uncomment/update baseurl to point to the vault.
    sed -i -e '/^mirrorlist/d' -e 's/^#baseurl/baseurl/' -e 's/mirror.centos.org/vault.centos.org/' /etc/yum.repos.d/CentOS-*.repo
    log_info "Repository files updated. Cleaning and rebuilding yum cache."
    yum clean all
    yum makecache
    log_info "Yum cache rebuilt successfully."
else
    log_info "Repositories already point to vault.centos.org. Skipping fix."
fi

# 3. Install LAMP Stack components
log_info "Installing Apache (httpd) and MariaDB..."
yum install -y httpd mariadb-server wget unzip

log_info "Starting and enabling httpd and mariadb services..."
systemctl start httpd
systemctl enable httpd
systemctl start mariadb
systemctl enable mariadb

log_info "Configuring firewall to allow HTTP and HTTPS traffic..."
firewall-cmd --permanent --add-service=http
firewall-cmd --permanent --add-service=https
firewall-cmd --reload

# WARNING: Intentionally skipping mysql_secure_installation to create a vulnerable server.
log_info "Skipping mysql_secure_installation to maintain a challenge environment."

# 4. Install PHP 7.1 and required extensions
log_info "Installing EPEL and Remi repositories for PHP 7.1..."
yum install -y epel-release yum-utils
yum install -y http://rpms.remirepo.net/enterprise/remi-release-7.rpm

log_info "Enabling Remi PHP 7.1 repository..."
yum-config-manager --enable remi-php71

log_info "Installing PHP 7.1 and required PrestaShop extensions..."
# List of extensions required by PrestaShop 1.6
yum install -y php php-cli php-fpm php-mysqlnd php-zip php-devel php-gd php-mcrypt \
               php-mbstring php-curl php-xml php-pear php-bcmath php-json php-intl php-opcache

log_info "Restarting Apache to load PHP module..."
systemctl restart httpd

# 5. Database and Application Provisioning
log_info "Creating MariaDB database and user for PrestaShop..."
mysql -u root <<-MYSQL_SCRIPT
CREATE DATABASE ${DB_NAME};
CREATE USER '${DB_USER}'@'localhost' IDENTIFIED BY '${DB_PASS}';
GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${DB_USER}'@'localhost';
FLUSH PRIVILEGES;
MYSQL_SCRIPT
log_info "Database '${DB_NAME}' and user '${DB_USER}' created."

log_info "Downloading PrestaShop ${PRESTASHOP_VERSION}..."
wget -O "${INSTALL_DIR}/${PRESTASHOP_ZIP}" "${PRESTASHOP_URL}"

log_info "Extracting PrestaShop files..."
# Unzip the main archive, then unzip the inner prestashop.zip to the final directory
unzip -o "${INSTALL_DIR}/${PRESTASHOP_ZIP}" -d "${INSTALL_DIR}"
# The initial zip contains another zip file named 'prestashop.zip'
unzip -o "${INSTALL_DIR}/prestashop.zip" -d "${INSTALL_DIR}"
# The files are extracted into a 'prestashop' directory by default.

log_info "Setting file ownership and permissions..."
chown -R apache:apache "${SHOP_DIR}"
find "${SHOP_DIR}" -type d -exec chmod 755 {} \;
find "${SHOP_DIR}" -type f -exec chmod 644 {} \;
log_info "Permissions set for ${SHOP_DIR}."

# 6. Run PrestaShop CLI Installer
log_info "Running PrestaShop command-line installer..."
# Ensure the install directory exists before attempting to run the CLI installer
if; then
    php "${SHOP_DIR}/install/index_cli.php" --domain="${SERVER_IP}" \
    --db_server=127.0.0.1 --db_name="${DB_NAME}" --db_user="${DB_USER}" \
    --db_password="${DB_PASS}" --prefix=ps_ --name="CCDC Store" \
    --email="${ADMIN_EMAIL}" --password="${ADMIN_PASS}" --language=en
else
    log_error "PrestaShop installation directory not found. Aborting."
fi

# 7. Post-Installation Cleanup
log_info "Cleaning up installation files..."
rm -rf "${SHOP_DIR}/install"
rm -f "${INSTALL_DIR}/${PRESTASHOP_ZIP}"
rm -f "${INSTALL_DIR}/prestashop.zip" # Remove inner zip
rm -f "${INSTALL_DIR}/Install_PrestaShop.html" # Remove instructional file

# 8. Discover and Report Admin URL
log_info "Discovering the randomized admin directory..."
# PrestaShop renames the 'admin' directory to a random string for security.
# We find it and report it to the user.
ADMIN_DIR_NAME=$(find "${SHOP_DIR}" -maxdepth 1 -type d -name "admin*" -printf "%f\n")
if; then
    ADMIN_URL="http://${SERVER_IP}/prestashop/${ADMIN_DIR_NAME}"
    log_info "Installation Complete!"
    echo "========================================================================"
    echo " PrestaShop Admin Panel:"
    echo " URL: ${ADMIN_URL}"
    echo " User: ${ADMIN_EMAIL}"
    echo " Password: ${ADMIN_PASS}"
    echo "========================================================================"
else
    log_error "Could not determine the admin directory URL."
fi

exit 0
