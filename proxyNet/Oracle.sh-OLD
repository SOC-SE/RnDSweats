#!/bin/bash

# Wazuh All-in-One Manual Installation Script for Oracle Linux 9.2
# This script automates the step-by-step installation of the Wazuh manager,
# Wazuh indexer, and Wazuh dashboard on a single Oracle Linux 9.2 host.

# --- Configuration ---
WAZUH_REPO_URL="https://packages.wazuh.com/4.12/yum/"
GPG_KEY_URL="https://packages.wazuh.com/key/GPG-KEY-WAZUH"
CERT_TOOL_URL="https://packages.wazuh.com/4.12/wazuh-certs-tool.sh"
CERT_CONFIG_URL="https://packages.wazuh.com/4.12/config.yml"
NODE_NAME="node-1"

# --- Helper Functions ---

# Function to print messages
print_message() {
    echo "================================================================"
    echo "$1"
    echo "================================================================"
}

# Function to check for root privileges
check_root() {
    if [ "$EUID" -ne 0 ]; then
        print_message "This script must be run as root. Please use sudo."
        exit 1
    fi
}

# Function to check the operating system
check_os() {
    if ! grep -q "Oracle Linux Server" /etc/oracle-release; then
        print_message "This script is intended for Oracle Linux."
        read -p "Your OS is not explicitly supported. Continue anyway? (y/n): " choice
        if [[ "$choice" != "y" ]]; then
            exit 1
        fi
    fi
}

# Function to get server IP
get_ip() {
    IP_ADDRESS=$(hostname -I | awk '{print $1}')
    if [ -z "$IP_ADDRESS" ]; then
        print_message "Could not determine the server's IP address. Exiting."
        exit 1
    fi
    echo "Server IP Address: $IP_ADDRESS"
}

# --- Main Script ---

# 1. Initial Setup
print_message "Starting Wazuh All-in-One Manual Installation"
check_root
check_os
get_ip

# Update system and install prerequisites
print_message "Updating system and installing prerequisites..."
dnf update -y
dnf install -y curl tar libcap

# 2. Add Wazuh Repository
print_message "Adding the Wazuh repository..."
cat > /etc/yum.repos.d/wazuh.repo <<EOF
[wazuh]
gpgcheck=1
gpgkey=${GPG_KEY_URL}
enabled=1
name=EL-\$releasever - Wazuh
baseurl=${WAZUH_REPO_URL}
protect=1
EOF
dnf makecache

# 3. Generate SSL Certificates
print_message "Generating SSL certificates..."
curl -sO $CERT_TOOL_URL
curl -sO $CERT_CONFIG_URL

# Update config.yml with correct node names and IP
sed -i "s/<indexer-node-ip>/$IP_ADDRESS/g" config.yml
sed -i "s/<wazuh-manager-ip>/$IP_ADDRESS/g" config.yml
sed -i "s/<dashboard-node-ip>/$IP_ADDRESS/g" config.yml
sed -i "s/node-1/$NODE_NAME/g" config.yml
sed -i "s/wazuh-1/$NODE_NAME/g" config.yml
sed -i "s/dashboard/$NODE_NAME/g" config.yml


bash wazuh-certs-tool.sh -A
tar -cvf wazuh-certificates.tar -C wazuh-certificates/ .
rm -rf wazuh-certificates/ wazuh-certs-tool.sh config.yml

# 4. Install and Configure Wazuh Indexer
print_message "Installing Wazuh Indexer..."
dnf install -y wazuh-indexer

print_message "Configuring Wazuh Indexer..."
# Deploy certificates
mkdir -p /etc/wazuh-indexer/certs
tar -xf wazuh-certificates.tar -C /etc/wazuh-indexer/certs/ ./$NODE_NAME.pem ./$NODE_NAME-key.pem ./root-ca.pem
mv /etc/wazuh-indexer/certs/$NODE_NAME.pem /etc/wazuh-indexer/certs/indexer.pem
mv /etc/wazuh-indexer/certs/$NODE_NAME-key.pem /etc/wazuh-indexer/certs/indexer-key.pem
chmod 500 /etc/wazuh-indexer/certs
chmod 400 /etc/wazuh-indexer/certs/*.pem
chown -R wazuh-indexer:wazuh-indexer /etc/wazuh-indexer/certs

# Configure opensearch.yml
cat > /etc/wazuh-indexer/opensearch.yml <<EOF
network.host: $IP_ADDRESS
node.name: $NODE_NAME
cluster.initial_master_nodes:
  - $NODE_NAME
cluster.name: wazuh-cluster
discovery.seed_hosts: []
plugins.security.ssl.transport.pemcert_filepath: /etc/wazuh-indexer/certs/indexer.pem
plugins.security.ssl.transport.pemkey_filepath: /etc/wazuh-indexer/certs/indexer-key.pem
plugins.security.ssl.transport.pemtrustedcas_filepath: /etc/wazuh-indexer/certs/root-ca.pem
plugins.security.ssl.transport.enforce_hostname_verification: false
plugins.security.ssl.http.enabled: true
plugins.security.ssl.http.pemcert_filepath: /etc/wazuh-indexer/certs/indexer.pem
plugins.security.ssl.http.pemkey_filepath: /etc/wazuh-indexer/certs/indexer-key.pem
plugins.security.ssl.http.pemtrustedcas_filepath: /etc/wazuh-indexer/certs/root-ca.pem
plugins.security.nodes_dn:
  - 'CN=$NODE_NAME,O=Wazuh,L=California,C=US'
plugins.security.authcz.admin_dn:
  - 'CN=admin,O=Wazuh,L=California,C=US'
EOF

print_message "Starting Wazuh Indexer and initializing cluster..."
systemctl daemon-reload
systemctl enable wazuh-indexer
systemctl start wazuh-indexer
/usr/share/wazuh-indexer/bin/indexer-security-init.sh -f

# 5. Install and Configure Wazuh Manager
print_message "Installing Wazuh Manager..."
dnf install -y wazuh-manager

print_message "Configuring Wazuh Manager..."
sed -i "s|<host>127.0.0.1</host>|<host>$IP_ADDRESS</host>|g" /var/ossec/etc/ossec.conf

print_message "Starting Wazuh Manager..."
systemctl daemon-reload
systemctl enable wazuh-manager
systemctl start wazuh-manager

# 6. Install and Configure Filebeat
print_message "Installing Filebeat..."
dnf install -y filebeat

print_message "Configuring Filebeat..."
curl -so /etc/filebeat/filebeat.yml https://packages.wazuh.com/4.12/tpl/wazuh/filebeat/filebeat.yml
sed -i "s/YOUR_WAZUH_INDEXER_IP/$IP_ADDRESS/" /etc/filebeat/filebeat.yml
curl -so /etc/filebeat/wazuh-template.json https://raw.githubusercontent.com/wazuh/wazuh/4.7/extensions/elasticsearch/7.x/wazuh-template.json
chmod go+r /etc/filebeat/wazuh-template.json
curl -s https://packages.wazuh.com/4.12/filebeat/wazuh-filebeat-0.3.tar.gz | tar -xvz -C /usr/share/filebeat/module

# Deploy Filebeat certificates
mkdir -p /etc/filebeat/certs
tar -xf wazuh-certificates.tar -C /etc/filebeat/certs/ ./$NODE_NAME.pem ./$NODE_NAME-key.pem ./root-ca.pem
mv /etc/filebeat/certs/$NODE_NAME.pem /etc/filebeat/certs/filebeat.pem
mv /etc/filebeat/certs/$NODE_NAME-key.pem /etc/filebeat/certs/filebeat-key.pem
chmod -R 500 /etc/filebeat/certs
chmod -R 400 /etc/filebeat/certs/*
chown -R root:root /etc/filebeat/certs

print_message "Starting Filebeat..."
systemctl daemon-reload
systemctl enable filebeat
systemctl start filebeat

# 7. Install and Configure Wazuh Dashboard
print_message "Installing Wazuh Dashboard..."
dnf install -y wazuh-dashboard

print_message "Configuring Wazuh Dashboard..."
# Deploy certificates
mkdir -p /etc/wazuh-dashboard/certs
tar -xf wazuh-certificates.tar -C /etc/wazuh-dashboard/certs/ ./$NODE_NAME.pem ./$NODE_NAME-key.pem ./root-ca.pem
mv /etc/wazuh-dashboard/certs/$NODE_NAME.pem /etc/wazuh-dashboard/certs/dashboard.pem
mv /etc/wazuh-dashboard/certs/$NODE_NAME-key.pem /etc/wazuh-dashboard/certs/dashboard-key.pem
chown -R wazuh-dashboard:wazuh-dashboard /etc/wazuh-dashboard/certs
chmod -R 500 /etc/wazuh-dashboard/certs
chmod -R 400 /etc/wazuh-dashboard/certs/*

# Configure opensearch_dashboards.yml
sed -i "s/server.host: \"0.0.0.0\"/server.host: \"$IP_ADDRESS\"/g" /etc/wazuh-dashboard/opensearch_dashboards.yml
sed -i "s|#opensearch.hosts: \[\"https://localhost:9200\"\]|opensearch.hosts: [\"https://$IP_ADDRESS:9200\"]|g" /etc/wazuh-dashboard/opensearch_dashboards.yml
sed -i "s|#server.ssl.enabled: false|server.ssl.enabled: true|g" /etc/wazuh-dashboard/opensearch_dashboards.yml
sed -i "s|#server.ssl.certificate: /path/to/your/server.crt|server.ssl.certificate: /etc/wazuh-dashboard/certs/dashboard.pem|g" /etc/wazuh-dashboard/opensearch_dashboards.yml
sed -i "s|#server.ssl.key: /path/to/your/server.key|server.ssl.key: /etc/wazuh-dashboard/certs/dashboard-key.pem|g" /etc/wazuh-dashboard/opensearch_dashboards.yml

print_message "Starting Wazuh Dashboard..."
systemctl daemon-reload
systemctl enable wazuh-dashboard
systemctl start wazuh-dashboard

# 8. Finalization
print_message "Wazuh manual installation is complete!"
echo "Please wait a few minutes for all services to start up."
echo "You can now access the Wazuh dashboard at: https://$IP_ADDRESS"
echo "The default username is 'admin'."
echo "The admin password can be found in the 'wazuh-passwords.txt' file inside 'wazuh-certificates.tar'."
echo "To retrieve the password, you can run:"
echo "tar -O -xf wazuh-certificates.tar wazuh-install-files/wazuh-passwords.txt"

# Clean up
rm -f wazuh-certificates.tar

print_message "Script finished."
